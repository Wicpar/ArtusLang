/*
 * Copyright 2017 - present Frederic Artus Nieto
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext.kotlin_version = '1.1.60'
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.hurricup:gradle-grammar-kit-plugin:2017.1.1"
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.2.14'
    id 'org.jetbrains.kotlin.jvm' version '1.1.3-2'
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}


group 'com.artuslang'
version '1.0-SNAPSHOT'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile group: 'de.odysseus.juel', name: 'juel', version: '2.1.3'
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.jetbrains.grammarkit'

sourceSets {
    main {
        java {
            srcDir 'src/gen/java'
        }
    }
}

intellij {
    version 'IC-2017.1.5'
    updateSinceUntilBuild false
}

idea {
    module {
        generatedSourceDirs += file('src/gen/java')
    }
}

import org.jetbrains.grammarkit.tasks.*

grammarKit {
}

task generateParser(type: GenerateParser) {
    source = "src/grammar/artuslang.bnf"
    targetRoot = 'src/gen/java/'
    pathToParser = 'com/artuslang/lang/ArtusParser.java'
    pathToPsiRoot = 'com/artuslang/lang/psi'
    purgeOldFiles = false
}

task generateLexer(type: GenerateLexer) {
    source = "src/grammar/artuslang.flex"
    targetDir = "src/gen/java/com/artuslang/lang/"
    targetClass = "ArtusLexer"
    purgeOldFiles = false
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    dependsOn generateLexer
    dependsOn generateParser
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    dependsOn generateLexer
    dependsOn generateParser
}
