###
    var root = "../../";
    lang:import(root + "utils/typesUtil.artus");
    lang:import(root + "utils/literalMatcher.artus");
    lang:import(root + "utils/builderUtil.artus");
    lang:import("ignore.artus");
    lang:import("nameSuite.artus");
    lang:import("../matchers/name.artus");

    var delimiterType = tokenType("delimiter");

    var st = literalMatcher("<", delimiterType);
    var gt = literalMatcher(">", delimiterType);
    var com = literalMatcher(",", delimiterType);
    var sem = literalMatcher(":", delimiterType);
    var name = matchers:get("artus.name");

    var nameSuiteBuilder = builders:get("artus.suite.name");

    var builder = function(prefix, exitCtx) {

        var ctxUID = lang:uid();

        var switchGen = function(token, tokenCtx, newCtx) {
            var scopeAlias = lang:getOrPut(newCtx.properties, "artus.scope.alias", lang:hashMapOf());
            var curScope = lang:getOrPut(scopeAlias, ctxUID, lang:hashMapOf());
            var ids = tokenCtx.properties["artus.suite.ids"] ?: lang:arrayListOf();
            tokenCtx.properties["artus.suite.ids"] = null;
            var name = tokenCtx.properties["artus.genericDef.current.name"];
            curScope.put(name, ids);
        };

        var endWith = function(token, tokenCtx, newCtx) {
            var ctxAliases = lang:getOrPut(newCtx.properties, "artus.alias", lang:hashMapOf());

        };

        var typeCtx = nameSuiteBuilder(prefix + ".generic.type", lang:arrayListOf(
            lang:contextMatcherSwitchWith(gt, exitCtx, function(token, tokenCtx, newCtx) {
            })
        ));

        var switchCtx = lang:contextType(prefix + ".generic.switch", lang:arrayListOf(
            lang:contextMatcherSwitch(sem, typeCtx),
            lang:contextMatcherSwitch(gt, exitCtx)
        ), lang:arrayListOf(ignore));

        var genericCtx = lang:contextType(prefix + ".generic", lang:arrayListOf(
            lang:contextMatcherSwitchWith(name, switchCtx, function(token, tokenCtx, newCtx) {
                newCtx.properties["artus.genericDef.current.name"] = token.text;
            })
        ), lang:arrayListOf(ignore));

        switchCtx.addMatcher(lang:contextMatcherSwitch(com, genericCtx));
        typeCtx.addMatcher(lang:contextMatcherSwitch(com, genericCtx));

        return genericCtx;
    }
    builders:put("artus.generic.def", builder);
###