###
    var root = "../../";
    lang:import(root + "utils/typesUtil.artus");
    lang:import(root + "utils/literalMatcher.artus");
    lang:import(root + "utils/builderUtil.artus");
    lang:import("ignore.artus");
    lang:import("nameSuite.artus");
    lang:import("../matchers/name.artus");

    var delimiterType = tokenType("delimiter");

    var st = literalMatcher("<", delimiterType);
    var gt = literalMatcher(">", delimiterType);
    var com = literalMatcher(",", delimiterType);
    var sem = literalMatcher(":", delimiterType);
    var name = matchers:get("artus.name");

    var nameSuiteBuilder = builders:get("artus.suite.name");

    var builder = function(prefix, exitCtx) {

        var typeCtx = nameSuiteBuilder(prefix + ".generic.type", lang:arrayListOf(
            lang:contextMatcherSwitch()
        ));

        var switchCtx = lang:contextType(prefix + ".generic.switch", lang:arrayListOf(
            lang:contextMatcherSwitch(sem, typeCtx),
            lang:contextMatcherSwitch(gt, exitCtx)
        ), lang:arrayListOf(ignore));

        var genericCtx = lang:contextType(prefix + ".generic", lang:arrayListOf(
            lang:contextMatcherSwitch(name, switchCtx)
        ), lang:arrayListOf(ignore));

        switchCtx.addMatcher(lang:contextMatcherSwitch(com, genericCtx));

        return genericCtx;
    }

    builders:put("artus.generic", builder);
###