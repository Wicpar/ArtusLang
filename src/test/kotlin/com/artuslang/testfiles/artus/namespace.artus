###
    lang:import("../utils/typesUtil.artus");
    lang:import("../utils/literalMatcher.artus");
    lang:import("../utils/contextUtil.artus");
    lang:import("fragments/ignore.artus");
    lang:import("fragments/fileBody.artus");

    var noType = tokenType("");
    var delimiterType = tokenType("delimiter");
    var keywordType = tokenType("keyword");
    var nameType = tokenType("name");

    var bo = literalMatcher("\{", delimiterType);
    var bc = literalMatcher("\}", delimiterType);
    var namespace = literalMatcher("namespace", keywordType);

    var ignore = contexts:get("artus.ignore");

    var nameMatcher = lang:tokenMatcher(nameType, "[\p{Pc}\p{L}\p{M}\p{No}][\p{Pc}\p{L}\p{M}\p{N}]*");

    var namespaceBodyCtx = lang:contextType("artus.namespace.body", lang:arrayListOf(
        lang:contextMatcherPop(bc)
    ));

    var namespaceNameCtx = lang:contextType("artus.namespace.name", lang:arrayListOf(
        //lang:contextMatcherPush(namespace) //missing
    ), lang:arrayListOf(ignore));

    var fileBodyCtx = contexts:get("artus.file.body")

    fileBodyCtx.addMatcher(lang:contextMatcherPush(namespace, namespaceNameCtx));

    namespaceBodyCtx.addParent(fileBodyCtx);
###